function [nf ] = problem12( )
% The sequence of triangle numbers is generated by adding the natural
% numbers. So the 7th triangle number would be
% 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
%
% 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
%
% Let us list the factors of the first seven triangle numbers:
%
%  1: 1
%  3: 1,3
%  6: 1,2,3,6
% 10: 1,2,5,10
% 15: 1,3,5,15
% 21: 1,3,7,21
% 28: 1,2,4,7,14,28
% We can see that 28 is the first triangle number to have over five
% divisors.
%
% What is the value of the first triangle number to have over five hundred
% divisors?
%

% tested 12375 76576500 576 


maxt=13000;
mint=12300;
primesu = primesieve(triangle(maxt));
for n=mint:maxt
    t=triangle (n);
    nf=numfactors(t, primesu);
    if nf > 100
        fprintf(1, '%d %d %d \n', n, t, nf);
    end
    if nf>=500
        break;
    end
end

    function [t]=triangle (nt)
        t=0;
        for it=1:nt
            t=t+it;
        end
    end

    function [nfacts] = numfactors(num, primesu)
        if num==1
            nfacts=1;
            return;
        end;
        if num==3
            nfacts=2;
            return;
        end;
        u=ceil(num/2);
        primes = primesu(1:u);
        num2=num;
        nfacts=0;
        pfactors=[];
        maxfact=0;
        for j=u:-1:2
            if primes(j)==1 && (mod(num,j)==0)
                pfactors=[pfactors;j];
                maxfact=j;
            end
        end
        factors=zeros(1,u);
        factors(1)=1;
        
        for nn=1:length(pfactors)
            m=pfactors(nn);
            i=1;
            while true
                if mod(num,m*i)==0
                    factors(m*i)=1;
                end
                i=i+1;
                if i>u
                    break;
                end
            end
        end
        for nn=1:length(factors)
            if factors(nn)==1
                nfacts=nfacts+1;
            end
        end
    end
end

%         for k=1:length(pfactors)^2
%             l=1;
%             kk=k;
%             p=1;
%             while true
%                 if mod(kk,2)==1
%                     %disp(pfactors(l));
%                     p=p*pfactors(l);
%                 end
%                 %fprintf(1,'----------- ;l %d k %d kk %d \n',l,k,kk);
%                 kk=floor(bitsra(k,l));
%                 l=l+1;
%                 if kk<1.0 || l > length(pfactors)
%                     %disp('.');
%                     break
%                 end
%             end
%             if mod(num,p)==0
%               fprintf(1,'n100 %d %d %d\n', num, p, mod(num,p));
%               nfacts=nfacts+1;
%             end
%         end
%         %nfacts=nfacts+2;
%     end

